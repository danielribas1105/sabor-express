[
    {
        "label": "ItemCardapio",
        "importPath": "models.cardapio.item_cardapio",
        "description": "models.cardapio.item_cardapio",
        "isExtraImport": true,
        "detail": "models.cardapio.item_cardapio",
        "documentation": {}
    },
    {
        "label": "ItemCardapio",
        "importPath": "models.cardapio.item_cardapio",
        "description": "models.cardapio.item_cardapio",
        "isExtraImport": true,
        "detail": "models.cardapio.item_cardapio",
        "documentation": {}
    },
    {
        "label": "ItemCardapio",
        "importPath": "models.cardapio.item_cardapio",
        "description": "models.cardapio.item_cardapio",
        "isExtraImport": true,
        "detail": "models.cardapio.item_cardapio",
        "documentation": {}
    },
    {
        "label": "ABC",
        "importPath": "abc",
        "description": "abc",
        "isExtraImport": true,
        "detail": "abc",
        "documentation": {}
    },
    {
        "label": "abstractmethod",
        "importPath": "abc",
        "description": "abc",
        "isExtraImport": true,
        "detail": "abc",
        "documentation": {}
    },
    {
        "label": "Avaliacao",
        "importPath": "models.avaliacao",
        "description": "models.avaliacao",
        "isExtraImport": true,
        "detail": "models.avaliacao",
        "documentation": {}
    },
    {
        "label": "requests",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "requests",
        "description": "requests",
        "detail": "requests",
        "documentation": {}
    },
    {
        "label": "json",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "json",
        "description": "json",
        "detail": "json",
        "documentation": {}
    },
    {
        "label": "Restaurante",
        "importPath": "models.restaurante",
        "description": "models.restaurante",
        "isExtraImport": true,
        "detail": "models.restaurante",
        "documentation": {}
    },
    {
        "label": "Prato",
        "importPath": "models.cardapio.prato",
        "description": "models.cardapio.prato",
        "isExtraImport": true,
        "detail": "models.cardapio.prato",
        "documentation": {}
    },
    {
        "label": "Bebida",
        "importPath": "models.cardapio.bebida",
        "description": "models.cardapio.bebida",
        "isExtraImport": true,
        "detail": "models.cardapio.bebida",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "FastAPI",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "Query",
        "importPath": "fastapi",
        "description": "fastapi",
        "isExtraImport": true,
        "detail": "fastapi",
        "documentation": {}
    },
    {
        "label": "Bebida",
        "kind": 6,
        "importPath": "models.cardapio.bebida",
        "description": "models.cardapio.bebida",
        "peekOfCode": "class Bebida(ItemCardapio):\n   def __init__(self, nome, preco, tamanho):\n      super().__init__(nome, preco)\n      self._tamanho = tamanho\n   def __str__(self):\n      return self._nome\n   def aplicar_desconto(self):\n      self._preco -= self._preco * 0.05",
        "detail": "models.cardapio.bebida",
        "documentation": {}
    },
    {
        "label": "ItemCardapio",
        "kind": 6,
        "importPath": "models.cardapio.item_cardapio",
        "description": "models.cardapio.item_cardapio",
        "peekOfCode": "class ItemCardapio(ABC):\n   def __init__(self, nome, preco):\n      self._nome = nome\n      self._preco = preco\n   @abstractmethod\n   def aplicar_desconto(self):\n      pass",
        "detail": "models.cardapio.item_cardapio",
        "documentation": {}
    },
    {
        "label": "Prato",
        "kind": 6,
        "importPath": "models.cardapio.prato",
        "description": "models.cardapio.prato",
        "peekOfCode": "class Prato(ItemCardapio):\n   def __init__(self, nome, preco, descricao):\n      super().__init__(nome, preco)\n      self._descricao = descricao\n   def __str__(self):\n      return self._nome\n   def aplicar_desconto(self):\n      self._preco -= self._preco * 0.08",
        "detail": "models.cardapio.prato",
        "documentation": {}
    },
    {
        "label": "Avaliacao",
        "kind": 6,
        "importPath": "models.avaliacao",
        "description": "models.avaliacao",
        "peekOfCode": "class Avaliacao:\n    def __init__(self, cliente, nota):\n        self._cliente = cliente\n        self._nota = nota",
        "detail": "models.avaliacao",
        "documentation": {}
    },
    {
        "label": "Restaurante",
        "kind": 6,
        "importPath": "models.restaurante",
        "description": "models.restaurante",
        "peekOfCode": "class Restaurante:\n\t\"\"\"Representa um restaurante e suas características.\"\"\"\n\trestaurantes = []\n\tdef __init__(self, nome, categoria):\n\t\t\"\"\"\n\t\tInicializa uma instância de Restaurante.\n      Parâmetros:\n      - nome (str): O nome do restaurante.\n      - categoria (str): A categoria do restaurante.\n      \"\"\"",
        "detail": "models.restaurante",
        "documentation": {}
    },
    {
        "label": "\trestaurantes",
        "kind": 5,
        "importPath": "models.restaurante",
        "description": "models.restaurante",
        "peekOfCode": "\trestaurantes = []\n\tdef __init__(self, nome, categoria):\n\t\t\"\"\"\n\t\tInicializa uma instância de Restaurante.\n      Parâmetros:\n      - nome (str): O nome do restaurante.\n      - categoria (str): A categoria do restaurante.\n      \"\"\"\n\t\tself._nome = nome.title()\n\t\tself._categoria = categoria.upper()",
        "detail": "models.restaurante",
        "documentation": {}
    },
    {
        "label": "\t\tself._nome",
        "kind": 5,
        "importPath": "models.restaurante",
        "description": "models.restaurante",
        "peekOfCode": "\t\tself._nome = nome.title()\n\t\tself._categoria = categoria.upper()\n\t\tself._ativo = False\n\t\tself._avaliacao = []\n\t\tself._cardapio = []\n\t\tRestaurante.restaurantes.append(self)\n\tdef __str__(self):\n\t\t\"\"\"Retorna uma representação em string do restaurante.\"\"\"\n\t\treturn f'{self._nome} | {self._categoria}'\n\t@classmethod",
        "detail": "models.restaurante",
        "documentation": {}
    },
    {
        "label": "\t\tself._categoria",
        "kind": 5,
        "importPath": "models.restaurante",
        "description": "models.restaurante",
        "peekOfCode": "\t\tself._categoria = categoria.upper()\n\t\tself._ativo = False\n\t\tself._avaliacao = []\n\t\tself._cardapio = []\n\t\tRestaurante.restaurantes.append(self)\n\tdef __str__(self):\n\t\t\"\"\"Retorna uma representação em string do restaurante.\"\"\"\n\t\treturn f'{self._nome} | {self._categoria}'\n\t@classmethod\n\tdef listar_restaurantes(cls):",
        "detail": "models.restaurante",
        "documentation": {}
    },
    {
        "label": "\t\tself._ativo",
        "kind": 5,
        "importPath": "models.restaurante",
        "description": "models.restaurante",
        "peekOfCode": "\t\tself._ativo = False\n\t\tself._avaliacao = []\n\t\tself._cardapio = []\n\t\tRestaurante.restaurantes.append(self)\n\tdef __str__(self):\n\t\t\"\"\"Retorna uma representação em string do restaurante.\"\"\"\n\t\treturn f'{self._nome} | {self._categoria}'\n\t@classmethod\n\tdef listar_restaurantes(cls):\n\t\t\"\"\"Exibe uma lista formatada de todos os restaurantes.\"\"\"",
        "detail": "models.restaurante",
        "documentation": {}
    },
    {
        "label": "\t\tself._avaliacao",
        "kind": 5,
        "importPath": "models.restaurante",
        "description": "models.restaurante",
        "peekOfCode": "\t\tself._avaliacao = []\n\t\tself._cardapio = []\n\t\tRestaurante.restaurantes.append(self)\n\tdef __str__(self):\n\t\t\"\"\"Retorna uma representação em string do restaurante.\"\"\"\n\t\treturn f'{self._nome} | {self._categoria}'\n\t@classmethod\n\tdef listar_restaurantes(cls):\n\t\t\"\"\"Exibe uma lista formatada de todos os restaurantes.\"\"\"\n\t\tprint(f'{\"Restaurante\".ljust(25)} | {\"Categoria\".ljust(25)} | {\"Avaliação\".ljust(25)} | {\"Status\"}')",
        "detail": "models.restaurante",
        "documentation": {}
    },
    {
        "label": "\t\tself._cardapio",
        "kind": 5,
        "importPath": "models.restaurante",
        "description": "models.restaurante",
        "peekOfCode": "\t\tself._cardapio = []\n\t\tRestaurante.restaurantes.append(self)\n\tdef __str__(self):\n\t\t\"\"\"Retorna uma representação em string do restaurante.\"\"\"\n\t\treturn f'{self._nome} | {self._categoria}'\n\t@classmethod\n\tdef listar_restaurantes(cls):\n\t\t\"\"\"Exibe uma lista formatada de todos os restaurantes.\"\"\"\n\t\tprint(f'{\"Restaurante\".ljust(25)} | {\"Categoria\".ljust(25)} | {\"Avaliação\".ljust(25)} | {\"Status\"}')\n\t\tfor restaurante in cls.restaurantes:",
        "detail": "models.restaurante",
        "documentation": {}
    },
    {
        "label": "\t\tself._ativo",
        "kind": 5,
        "importPath": "models.restaurante",
        "description": "models.restaurante",
        "peekOfCode": "\t\tself._ativo = not self._ativo\n\tdef receber_avaliacao(self, cliente, nota):\n\t\t\"\"\"\n      Registra uma avaliação para o restaurante.\n\t\tParâmetros:\n\t\t- cliente (str): O nome do cliente que fez a avaliação.\n\t\t- nota (float): A nota atribuída ao restaurante (entre 5 e 10).\n\t\t\"\"\"\n\t\tif nota < 5.0:\n\t\t\tnota = 5.0",
        "detail": "models.restaurante",
        "documentation": {}
    },
    {
        "label": "\t\t\tnota",
        "kind": 5,
        "importPath": "models.restaurante",
        "description": "models.restaurante",
        "peekOfCode": "\t\t\tnota = 5.0\n\t\tavaliacao = Avaliacao(cliente, nota)\n\t\tself._avaliacao.append(avaliacao)\n\t@property\n\tdef media_avaliacoes(self):\n\t\t\"\"\"Calcula e retorna a média das avaliações do restaurante.\"\"\"\n\t\tif not self._avaliacao:\n\t\t\treturn 'Sem avaliações'\n\t\tsoma_das_notas = sum(avaliacao._nota for avaliacao in self._avaliacao)\n\t\tquantidade_notas = len(self._avaliacao)",
        "detail": "models.restaurante",
        "documentation": {}
    },
    {
        "label": "\t\tavaliacao",
        "kind": 5,
        "importPath": "models.restaurante",
        "description": "models.restaurante",
        "peekOfCode": "\t\tavaliacao = Avaliacao(cliente, nota)\n\t\tself._avaliacao.append(avaliacao)\n\t@property\n\tdef media_avaliacoes(self):\n\t\t\"\"\"Calcula e retorna a média das avaliações do restaurante.\"\"\"\n\t\tif not self._avaliacao:\n\t\t\treturn 'Sem avaliações'\n\t\tsoma_das_notas = sum(avaliacao._nota for avaliacao in self._avaliacao)\n\t\tquantidade_notas = len(self._avaliacao)\n\t\tmedia = round(soma_das_notas / quantidade_notas, 1)",
        "detail": "models.restaurante",
        "documentation": {}
    },
    {
        "label": "\t\tsoma_das_notas",
        "kind": 5,
        "importPath": "models.restaurante",
        "description": "models.restaurante",
        "peekOfCode": "\t\tsoma_das_notas = sum(avaliacao._nota for avaliacao in self._avaliacao)\n\t\tquantidade_notas = len(self._avaliacao)\n\t\tmedia = round(soma_das_notas / quantidade_notas, 1)\n\t\treturn media\n\tdef adicionar_no_cardapio(self, item):\n\t\tif isinstance(item, ItemCardapio):\n\t\t\tself._cardapio.append(item)\n\t@property\n\tdef exibir_cardapio(self):\n\t\tprint(f'Cardapio do restaurante {self._nome}\\n')",
        "detail": "models.restaurante",
        "documentation": {}
    },
    {
        "label": "\t\tquantidade_notas",
        "kind": 5,
        "importPath": "models.restaurante",
        "description": "models.restaurante",
        "peekOfCode": "\t\tquantidade_notas = len(self._avaliacao)\n\t\tmedia = round(soma_das_notas / quantidade_notas, 1)\n\t\treturn media\n\tdef adicionar_no_cardapio(self, item):\n\t\tif isinstance(item, ItemCardapio):\n\t\t\tself._cardapio.append(item)\n\t@property\n\tdef exibir_cardapio(self):\n\t\tprint(f'Cardapio do restaurante {self._nome}\\n')\n\t\tfor i, item in enumerate(self._cardapio, start=1):",
        "detail": "models.restaurante",
        "documentation": {}
    },
    {
        "label": "\t\tmedia",
        "kind": 5,
        "importPath": "models.restaurante",
        "description": "models.restaurante",
        "peekOfCode": "\t\tmedia = round(soma_das_notas / quantidade_notas, 1)\n\t\treturn media\n\tdef adicionar_no_cardapio(self, item):\n\t\tif isinstance(item, ItemCardapio):\n\t\t\tself._cardapio.append(item)\n\t@property\n\tdef exibir_cardapio(self):\n\t\tprint(f'Cardapio do restaurante {self._nome}\\n')\n\t\tfor i, item in enumerate(self._cardapio, start=1):\n\t\t\tif hasattr(item, '_descricao'):",
        "detail": "models.restaurante",
        "documentation": {}
    },
    {
        "label": "\t\t\t\tmensagem_prato",
        "kind": 5,
        "importPath": "models.restaurante",
        "description": "models.restaurante",
        "peekOfCode": "\t\t\t\tmensagem_prato = f'{i}. Nome: {item._nome} | Preço: R$ {item._preco} | Descrição: {item._descricao}'\n\t\t\t\tprint(mensagem_prato)\n\t\t\telse:\n\t\t\t\tmensagem_bebida = f'{i}. Nome: {item._nome} | Preço: R$ {item._preco} | Tamanho: {item._tamanho}'\n\t\t\t\tprint(mensagem_bebida)",
        "detail": "models.restaurante",
        "documentation": {}
    },
    {
        "label": "\t\t\t\tmensagem_bebida",
        "kind": 5,
        "importPath": "models.restaurante",
        "description": "models.restaurante",
        "peekOfCode": "\t\t\t\tmensagem_bebida = f'{i}. Nome: {item._nome} | Preço: R$ {item._preco} | Tamanho: {item._tamanho}'\n\t\t\t\tprint(mensagem_bebida)",
        "detail": "models.restaurante",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "app",
        "description": "app",
        "peekOfCode": "def main():\n    restaurante_massa.exibir_cardapio\nif __name__ == '__main__':\n    main() \"\"\"",
        "detail": "app",
        "documentation": {}
    },
    {
        "label": "url",
        "kind": 5,
        "importPath": "app",
        "description": "app",
        "peekOfCode": "url = 'https://guilhermeonrails.github.io/api-restaurantes/restaurantes.json'\nresponse = requests.get(url)\nprint(response)\nif response.status_code == 200:\n    dados_json = response.json()\n    dados_restaurante = {}\n    for item in dados_json:\n        nome_restaurante = item['Company']\n        if nome_restaurante not in dados_restaurante:\n            dados_restaurante[nome_restaurante] = []",
        "detail": "app",
        "documentation": {}
    },
    {
        "label": "response",
        "kind": 5,
        "importPath": "app",
        "description": "app",
        "peekOfCode": "response = requests.get(url)\nprint(response)\nif response.status_code == 200:\n    dados_json = response.json()\n    dados_restaurante = {}\n    for item in dados_json:\n        nome_restaurante = item['Company']\n        if nome_restaurante not in dados_restaurante:\n            dados_restaurante[nome_restaurante] = []\n        dados_restaurante[nome_restaurante].append({",
        "detail": "app",
        "documentation": {}
    },
    {
        "label": "bebida_suco",
        "kind": 5,
        "importPath": "app",
        "description": "app",
        "peekOfCode": "bebida_suco = Bebida('Suco de Melancia', 5.0, 'G')\nbebida_suco.aplicar_desconto()\nprato_pao = Prato('Pão', 1.0, 'Pãozinho da casa')\nprato_pao.aplicar_desconto()\nrestaurante_massa.adicionar_no_cardapio(bebida_suco)\nrestaurante_massa.adicionar_no_cardapio(prato_pao)\nRestaurante.listar_restaurantes()\ndef main():\n    restaurante_massa.exibir_cardapio\nif __name__ == '__main__':",
        "detail": "app",
        "documentation": {}
    },
    {
        "label": "prato_pao",
        "kind": 5,
        "importPath": "app",
        "description": "app",
        "peekOfCode": "prato_pao = Prato('Pão', 1.0, 'Pãozinho da casa')\nprato_pao.aplicar_desconto()\nrestaurante_massa.adicionar_no_cardapio(bebida_suco)\nrestaurante_massa.adicionar_no_cardapio(prato_pao)\nRestaurante.listar_restaurantes()\ndef main():\n    restaurante_massa.exibir_cardapio\nif __name__ == '__main__':\n    main() \"\"\"",
        "detail": "app",
        "documentation": {}
    },
    {
        "label": "exibir_nome_app",
        "kind": 2,
        "importPath": "app_old",
        "description": "app_old",
        "peekOfCode": "def exibir_nome_app():\n    print(\"\"\"\n░██████╗░█████╗░██████╗░░█████╗░██████╗░  ███████╗██╗░░██╗██████╗░██████╗░███████╗░██████╗░██████╗\n██╔════╝██╔══██╗██╔══██╗██╔══██╗██╔══██╗  ██╔════╝╚██╗██╔╝██╔══██╗██╔══██╗██╔════╝██╔════╝██╔════╝\n╚█████╗░███████║██████╦╝██║░░██║██████╔╝  █████╗░░░╚███╔╝░██████╔╝██████╔╝█████╗░░╚█████╗░╚█████╗░\n░╚═══██╗██╔══██║██╔══██╗██║░░██║██╔══██╗  ██╔══╝░░░██╔██╗░██╔═══╝░██╔══██╗██╔══╝░░░╚═══██╗░╚═══██╗\n██████╔╝██║░░██║██████╦╝╚█████╔╝██║░░██║  ███████╗██╔╝╚██╗██║░░░░░██║░░██║███████╗██████╔╝██████╔╝\n╚═════╝░╚═╝░░╚═╝╚═════╝░░╚════╝░╚═╝░░╚═╝  ╚══════╝╚═╝░░╚═╝╚═╝░░░░░╚═╝░░╚═╝╚══════╝╚═════╝░╚═════╝░\n\"\"\")\ndef exibir_opcoes():",
        "detail": "app_old",
        "documentation": {}
    },
    {
        "label": "exibir_opcoes",
        "kind": 2,
        "importPath": "app_old",
        "description": "app_old",
        "peekOfCode": "def exibir_opcoes():\n    print('1. Cadastrar restaurante')\n    print('2. Listar restaurante')\n    print('3. Alternar estado restaurante')\n    print('4. Sair')\ndef opcao_invalida():\n    print('Opção inválida!')\n    voltar_menu_principal()\ndef exibir_subtitulo(texto):\n    os.system('cls')",
        "detail": "app_old",
        "documentation": {}
    },
    {
        "label": "opcao_invalida",
        "kind": 2,
        "importPath": "app_old",
        "description": "app_old",
        "peekOfCode": "def opcao_invalida():\n    print('Opção inválida!')\n    voltar_menu_principal()\ndef exibir_subtitulo(texto):\n    os.system('cls')\n    linha = '*' * len(texto)\n    print(linha)\n    print(texto)\n    print(linha)\ndef cadastrar_novo_restaurante():",
        "detail": "app_old",
        "documentation": {}
    },
    {
        "label": "exibir_subtitulo",
        "kind": 2,
        "importPath": "app_old",
        "description": "app_old",
        "peekOfCode": "def exibir_subtitulo(texto):\n    os.system('cls')\n    linha = '*' * len(texto)\n    print(linha)\n    print(texto)\n    print(linha)\ndef cadastrar_novo_restaurante():\n    '''Função para realizar o cadastro de novos restaurantes\n    Inputs:\n    - Nome do restaurante",
        "detail": "app_old",
        "documentation": {}
    },
    {
        "label": "cadastrar_novo_restaurante",
        "kind": 2,
        "importPath": "app_old",
        "description": "app_old",
        "peekOfCode": "def cadastrar_novo_restaurante():\n    '''Função para realizar o cadastro de novos restaurantes\n    Inputs:\n    - Nome do restaurante\n    - Categoria do restaurante\n    Output:\n    - Acrescenta um restaurante a lista de restaurantes\n    '''\n    exibir_subtitulo('Cadastro de novo restaurante\\n')\n    nome_restaurante = input('Digite o nome do restaurante para cadastro: ')",
        "detail": "app_old",
        "documentation": {}
    },
    {
        "label": "listar_restaurantes",
        "kind": 2,
        "importPath": "app_old",
        "description": "app_old",
        "peekOfCode": "def listar_restaurantes():\n    '''Essa função lista os restaurantes cadastrados'''\n    exibir_subtitulo('Listando restaurantes cadastrados')\n    for restaurante in restaurantes:\n        nome_restaurante = restaurante['nome']\n        categoria = restaurante['categoria']\n        ativo = 'Ativado' if restaurante['ativo'] else 'Desativado'\n        print(f'. {nome_restaurante.ljust(20)} | {categoria.ljust(20)} | {ativo}\\n')\n    voltar_menu_principal()\ndef alterar_estado_restaurante():",
        "detail": "app_old",
        "documentation": {}
    },
    {
        "label": "alterar_estado_restaurante",
        "kind": 2,
        "importPath": "app_old",
        "description": "app_old",
        "peekOfCode": "def alterar_estado_restaurante():\n    '''Função para alternar o estado de um restaurante'''\n    exibir_subtitulo('Alterando estado do restaurante\\n')\n    nome_restaurante = input('Digite o nome do restaurante para alterar o estado: ')\n    restaurante_encontrado = False\n    for restaurante in restaurantes:\n        if nome_restaurante == restaurante['nome']:\n            restaurante_encontrado = True\n            restaurante['ativo'] = not restaurante['ativo']\n            mensagem = f'O restaurante {nome_restaurante} foi ativado com sucesso' if restaurante['ativo'] else f'O restaurante {nome_restaurante} foi desativado com sucesso'",
        "detail": "app_old",
        "documentation": {}
    },
    {
        "label": "escolher_opcao",
        "kind": 2,
        "importPath": "app_old",
        "description": "app_old",
        "peekOfCode": "def escolher_opcao():\n    try:\n        opcao_selecionada = int(input('\\nEscolha uma opção: '))\n        print(f'Você escolheu a opção {opcao_selecionada}')\n        match opcao_selecionada:\n            case 1:\n                cadastrar_novo_restaurante()\n            case 2:\n                listar_restaurantes()\n            case 3:",
        "detail": "app_old",
        "documentation": {}
    },
    {
        "label": "finalizar_app",
        "kind": 2,
        "importPath": "app_old",
        "description": "app_old",
        "peekOfCode": "def finalizar_app():\n    exibir_subtitulo('App finalizado!\\n')\ndef voltar_menu_principal():\n    input('\\nDigite uma tecla para voltar ao menu principal')\n    main()\ndef main():\n    exibir_nome_app()\n    exibir_opcoes()\n    escolher_opcao()\nif __name__ == '__main__':",
        "detail": "app_old",
        "documentation": {}
    },
    {
        "label": "voltar_menu_principal",
        "kind": 2,
        "importPath": "app_old",
        "description": "app_old",
        "peekOfCode": "def voltar_menu_principal():\n    input('\\nDigite uma tecla para voltar ao menu principal')\n    main()\ndef main():\n    exibir_nome_app()\n    exibir_opcoes()\n    escolher_opcao()\nif __name__ == '__main__':\n    main()",
        "detail": "app_old",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "app_old",
        "description": "app_old",
        "peekOfCode": "def main():\n    exibir_nome_app()\n    exibir_opcoes()\n    escolher_opcao()\nif __name__ == '__main__':\n    main()",
        "detail": "app_old",
        "documentation": {}
    },
    {
        "label": "restaurantes",
        "kind": 5,
        "importPath": "app_old",
        "description": "app_old",
        "peekOfCode": "restaurantes = [{'nome':'Pizza da Nona', 'categoria':'Pizzas', 'ativo': False}, \n                {'nome':'Shushi da Praça', 'categoria':'Japa', 'ativo': True},\n                {'nome':'Kilograma', 'categoria':'Kilo', 'ativo': True},\n]\ndef exibir_nome_app():\n    print(\"\"\"\n░██████╗░█████╗░██████╗░░█████╗░██████╗░  ███████╗██╗░░██╗██████╗░██████╗░███████╗░██████╗░██████╗\n██╔════╝██╔══██╗██╔══██╗██╔══██╗██╔══██╗  ██╔════╝╚██╗██╔╝██╔══██╗██╔══██╗██╔════╝██╔════╝██╔════╝\n╚█████╗░███████║██████╦╝██║░░██║██████╔╝  █████╗░░░╚███╔╝░██████╔╝██████╔╝█████╗░░╚█████╗░╚█████╗░\n░╚═══██╗██╔══██║██╔══██╗██║░░██║██╔══██╗  ██╔══╝░░░██╔██╗░██╔═══╝░██╔══██╗██╔══╝░░░╚═══██╗░╚═══██╗",
        "detail": "app_old",
        "documentation": {}
    },
    {
        "label": "hello_world",
        "kind": 2,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "def hello_world():\n    \"\"\"Endpoint que exibe uma mensagem incrível do mundo da programação!\"\"\"\n    return {\"Hello\": \"World\"}\n@app.get(\"/api/restaurantes/\")\ndef get_restaurantes(restaurante: str = Query(None)):\n    \"\"\"Endpoint para ver os cardápios dos restaurantes\"\"\"\n    url = \"https://guilhermeonrails.github.io/api-restaurantes/restaurantes.json\"\n    response = requests.get(url)\n    if response.status_code == 200:\n        dados_json = response.json()",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "get_restaurantes",
        "kind": 2,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "def get_restaurantes(restaurante: str = Query(None)):\n    \"\"\"Endpoint para ver os cardápios dos restaurantes\"\"\"\n    url = \"https://guilhermeonrails.github.io/api-restaurantes/restaurantes.json\"\n    response = requests.get(url)\n    if response.status_code == 200:\n        dados_json = response.json()\n        if restaurante is None:\n            return {\"Dados:\": dados_json}\n        dados_restaurante = []\n        for item in dados_json:",
        "detail": "main",
        "documentation": {}
    },
    {
        "label": "app",
        "kind": 5,
        "importPath": "main",
        "description": "main",
        "peekOfCode": "app = FastAPI()\n@app.get(\"/api/hello\")\ndef hello_world():\n    \"\"\"Endpoint que exibe uma mensagem incrível do mundo da programação!\"\"\"\n    return {\"Hello\": \"World\"}\n@app.get(\"/api/restaurantes/\")\ndef get_restaurantes(restaurante: str = Query(None)):\n    \"\"\"Endpoint para ver os cardápios dos restaurantes\"\"\"\n    url = \"https://guilhermeonrails.github.io/api-restaurantes/restaurantes.json\"\n    response = requests.get(url)",
        "detail": "main",
        "documentation": {}
    }
]